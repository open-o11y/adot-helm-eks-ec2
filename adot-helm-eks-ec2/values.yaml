nameOverride: ""
fullnameOverride: ""
global:
  namespaceOverride: ""
awsRegion: ""
clusterName: ""
serviceAccount:
  create: true
  annotations: {}
  name: ""
fluentbit:
  enabled: true
  namespaceOverride: ""
  name: fluent-bit
  configName: fluent-bit-config
  namespace: amazon-cloudwatch
  image:
    repository: amazon/aws-for-fluent-bit
    tag: 2.20.0
    pullPolicy: Always
  input:
    applicationLog:
      tag: "application.*"
      excludePath: "/var/log/containers/cloudwatch-agent*, /var/log/containers/fluent-bit*, /var/log/containers/aws-node*, /var/log/containers/kube-proxy*"
      path: "/var/log/containers/*.log"
      dockerMode: "On"
      dockerModeFlush: 5
      parser: "docker"
      dockerModeParser: "container_firstline"
      db: "/var/fluent-bit/state/flb_container.db"
      memBufLimit: "50MB"
      skipLongLines: "On"
      refreshInterval: 10
      rotateWait: 30
      storageType: "filesystem"
      fluentbit:
        path: "/var/log/containers/fluent-bit*"
        db: "/var/fluent-bit/state/flb_log.db"
        memBufLimit: "5MB"
      cloudwatchAgent:
        path: "/var/log/containers/cloudwatch-agent*"
        dockerModeParser: "cwagent_firstline"
        db: "/var/fluent-bit/state/flb_cwagent.db"
        memBufLimit: "5MB"
    dataplaneLog:
      systemd:
        tag: "dataplane.systemd.*"
        dockerUnit: "_SYSTEMD_UNIT=docker.service"
        kubeletUnit: "_SYSTEMD_UNIT=kubelet.service"
        db: "/var/fluent-bit/state/systemd.db"
        path: "/var/log/journal"
      tail:
        tag: "dataplane.tail.*"
        path: "/var/log/containers/aws-node*, /var/log/containers/kube-proxy*"
        dockerMode: "On"
        dockerModeFlush: 5
        parser: "docker"
        dockerModeParser: "container_firstline"
        db: "/var/fluent-bit/state/flb_dataplane_tail.db"
        memBufLimit: "50MB"
        skipLongLines: "On"
        refreshInterval: 10
        rotateWait: 30
        storageType: "filesystem"
    hostLog:
      dmesg:
        tag: "host.dmesg"
        path: "/var/log/dmesg"
        db: "/var/fluent-bit/state/flb_dmesg.db"
      messages:
        tag: "host.messages"
        path: "/var/log/messages"
        db: "/var/fluent-bit/state/flb_messages.db"
      secure:
        tag: "host.secure"
        path: "/var/log/secure"
        db: "/var/fluent-bit/state/flb_secure.db"
      parser: "syslog"
      memBufLimit: "5MB"
      skipLongLines: "On"
      refreshInterval: 10
  kubernetesFilter:
    match: "application.*"
    kubeURL: "https://kubernetes.default.svc:443"
    kubeTagPrefix: "application.var.log.containers."
    mergeLog: "On"
    mergeLogKey: "log_processed"
    k8sLoggingParser: "On"
    k8sLoggingExclude: "Off"
    labels: "Off"
    annotations: "Off"
  resources:
    limits:
      memory: 200Mi
    requests:
      cpu: 500m
      memory: 100Mi
  volumeMounts:
    - name: fluentbitstate
      mountPath: /var/fluent-bit/state
    - name: varlog
      mountPath: /var/log
      readOnly: true
    - name: varlibdockercontainers
      mountPath: /var/lib/docker/containers
      readOnly: true
    - name: fluent-bit-config
      mountPath: /fluent-bit/etc/
    - name: runlogjournal
      mountPath: /run/log/journal
      readOnly: true
    - name: dmesg
      mountPath: /var/log/dmesg
      readOnly: true
  volumes:
    - name: fluentbitstate
      hostPath:
        path: /var/fluent-bit/state
    - name: varlog
      hostPath:
        path: /var/log
    - name: varlibdockercontainers
      hostPath:
        path: /var/lib/docker/containers
    - name: fluent-bit-config
      configMap:
        name: fluent-bit-config
    - name: runlogjournal
      hostPath:
        path: /run/log/journal
    - name: dmesg
      hostPath:
        path: /var/log/dmesg
  tolerations:
    - key: node-role.kubernetes.io/master
      operator: Exists
      effect: NoSchedule
    - operator: "Exists"
      effect: "NoExecute"
    - operator: "Exists"
      effect: "NoSchedule"
  env:
    httpServer: On
    httpPort: "2020"
    readFromHead: "Off"
    readFromTail: "On"

adot:
  enabled: true
  namespaceOverride: ""
  name: aws-otel-collector
  image:
    repository: amazon/aws-otel-collector
    tag: v0.13.0
    pullPolicy: IfNotPresent
  namespace: aws-otel-eks
